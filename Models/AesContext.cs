// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace DataNormalization.Models;

public partial class AesContext : DbContext
{
    public AesContext(DbContextOptions<AesContext> options) : base(options)
    {
    }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) =>
            optionsBuilder.UseSqlServer("server=192.168.5.199;Database=AES;Trusted_Connection=True;TrustServerCertificate=True");

    public virtual DbSet<EquipmentService_DimensionsUom> DimensionsUom { get; set; }

    public virtual DbSet<EquipmentService_ItemDimensions> ItemDimensions { get; set; }

    public virtual DbSet<EquipmentService_ItemInfo> ItemInfo { get; set; }

    public virtual DbSet<EquipmentService_ItemInfoTemplate> ItemInfoTemplate { get; set; }

    public virtual DbSet<EquipmentService_ItemInfoTemplateValues> ItemInfoTemplateValues { get; set; }

    public virtual DbSet<EquipmentService_VendorPrices> VendorPrices { get; set; }

    public virtual DbSet<Item_LifeCycles> LifeCycles { get; set; }

    public virtual DbSet<VENDORS> Vendors { get; set; }

    public virtual DbSet<tblManufacturers> Manufacturers { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<EquipmentService_DimensionsUom>(entity =>
        {
            entity.HasKey(e => e.UomId).HasName("PK__Equipmen__F6F8D47E04D28CA2");

            entity.ToTable("EquipmentService.DimensionsUom");

            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Uom)
                .HasMaxLength(45)
                .IsUnicode(false);
        });

        modelBuilder.Entity<EquipmentService_ItemDimensions>(entity =>
        {
            entity.HasKey(e => e.DimensionId).HasName("EquipmentService.ItemDimensions_pk");

            entity.ToTable("EquipmentService.ItemDimensions");

            entity.Property(e => e.Height).HasColumnType("decimal(10, 3)");
            entity.Property(e => e.Length).HasColumnType("decimal(10, 3)");
            entity.Property(e => e.Width).HasColumnType("decimal(10, 3)");

            entity.HasOne(d => d.Uom).WithMany(p => p.EquipmentService_ItemDimensions)
                .HasForeignKey(d => d.UomId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("EquipmentService.ItemDimensions_EquipmentServices.DimensionsUom_UomId_fk");
        });

        modelBuilder.Entity<EquipmentService_ItemInfo>(entity =>
        {
            entity.HasKey(e => e.ItemInfoId).HasName("EquipmentService.ItemInfo_pk");

            entity.ToTable("EquipmentService.ItemInfo", tb => tb.HasComment("Table that contains the information specific about an item."));

            entity.HasIndex(e => e.ItemInfoId, "ui_PartNumber").IsUnique();

            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(55)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Description)
                .HasMaxLength(250)
                .IsUnicode(false);
            entity.Property(e => e.ListPrice).HasColumnType("money");
            entity.Property(e => e.Manufacturer)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.PartNumber)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Uom)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false)
                .HasDefaultValue("ea");
            entity.Property(e => e.Weight).HasColumnType("decimal(10, 3)");
            entity.Property(e => e.WeightUnit)
                .HasMaxLength(15)
                .IsUnicode(false)
                .HasDefaultValue("lb");

            entity.HasOne(d => d.Dimension).WithMany(p => p.EquipmentService_ItemInfo)
                .HasForeignKey(d => d.DimensionId)
                .HasConstraintName("EquipmentService.ItemInfo_EquipmentService.ItemDimensions_DimensionId_fk");

            entity.HasOne(d => d.ManufacturerNavigation).WithMany(p => p.EquipmentService_ItemInfo)
                .HasForeignKey(d => d.Manufacturer)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("EquipmentService.ItemInfo_tblManufacturers_ManfName_fk");

            entity.HasOne(d => d.lifecycle).WithMany(p => p.EquipmentService_ItemInfo)
                .HasForeignKey(d => d.lifecycleId)
                .HasConstraintName("EquipmentService.ItemInfo_Item.LifeCycles_id_fk");
        });

        modelBuilder.Entity<EquipmentService_ItemInfoTemplate>(entity =>
        {
            entity.HasKey(e => e.TemplateId).HasName("EquipmentService.ItemInfoTemplate_pk");

            entity.ToTable("EquipmentService.ItemInfoTemplate", tb => tb.HasComment("Used to create templates for individual, searchable fields for an item."));

            entity.Property(e => e.CreatedBy)
                .IsRequired()
                .HasMaxLength(55)
                .IsUnicode(false);
            entity.Property(e => e.CreatedDate)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.FieldName1)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName10)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName2)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName3)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName4)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName5)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName6)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName7)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName8)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.FieldName9)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.TemplateDescription)
                .HasMaxLength(400)
                .IsUnicode(false);
            entity.Property(e => e.TemplateName)
                .IsRequired()
                .HasMaxLength(120)
                .IsUnicode(false);
        });

        modelBuilder.Entity<EquipmentService_ItemInfoTemplateValues>(entity =>
        {
            entity.HasKey(e => e.ItemInfoId).HasName("EquipmentService.ItemInfoTemplateValues_pk");

            entity.ToTable("EquipmentService.ItemInfoTemplateValues");

            entity.Property(e => e.ItemInfoId).ValueGeneratedNever();
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(55)
                .IsUnicode(false);
            entity.Property(e => e.DateCreated)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.FieldValue1)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue10)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue2)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue3)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue4)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue5)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue6)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue7)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue8)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.FieldValue9)
                .HasMaxLength(120)
                .IsUnicode(false);

            entity.HasOne(d => d.ItemInfo).WithOne(p => p.EquipmentService_ItemInfoTemplateValues)
                .HasForeignKey<EquipmentService_ItemInfoTemplateValues>(d => d.ItemInfoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("EquipmentService.ItemInfoTemplateValuesItemInfo___fk");

            entity.HasOne(d => d.Template).WithMany(p => p.EquipmentService_ItemInfoTemplateValues)
                .HasForeignKey(d => d.TemplateId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("EquipmentService.ItemInfoTemplateValues_EquipmentService.ItemInfoTemplate_TemplateId_fk");
        });

        modelBuilder.Entity<EquipmentService_VendorPrices>(entity =>
        {
            entity.HasKey(e => e.PriceId).HasName("EquipmentService.VendorPrices_pk");

            entity.ToTable("EquipmentService.VendorPrices");

            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.LastUpdated).HasColumnType("datetime");
            entity.Property(e => e.MSRP).HasColumnType("money");
            entity.Property(e => e.OurPrice).HasColumnType("money");

            entity.HasOne(d => d.Item).WithMany(p => p.EquipmentService_VendorPrices)
                .HasForeignKey(d => d.ItemId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("EquipmentService.VendorPrices_EquipmentService.ItemInfo_ItemInfoId_fk");

            entity.HasOne(d => d.Vendor).WithMany(p => p.EquipmentService_VendorPrices)
                .HasForeignKey(d => d.VendorId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("EquipmentService.VendorPrices_VENDORS_VendorID_fk");
        });

        modelBuilder.Entity<Item_LifeCycles>(entity =>
        {
            entity.HasKey(e => e.id).HasName("PL_LifecycleId");

            entity.ToTable("Item.LifeCycles", tb => tb.HasComment("Life Cycles for items"));

            entity.HasIndex(e => e.lifecycle, "Item.LifeCycles_lifecycle_index");

            entity.Property(e => e.lifecycle)
                .IsRequired()
                .HasMaxLength(75)
                .IsUnicode(false);
        });

        modelBuilder.Entity<VENDORS>(entity =>
        {
            entity.HasKey(e => e.VendorID);

            entity.HasIndex(e => e.VendorID, "ui_VendorIdIndex").IsUnique();

            entity.Property(e => e.VendorID).ValueGeneratedNever();
            entity.Property(e => e.Address).HasMaxLength(50);
            entity.Property(e => e.Address2).HasMaxLength(50);
            entity.Property(e => e.Alias)
                .HasMaxLength(150)
                .IsUnicode(false);
            entity.Property(e => e.Approved)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.City).HasMaxLength(50);
            entity.Property(e => e.Comments).HasColumnType("ntext");
            entity.Property(e => e.Contact).HasMaxLength(50);
            entity.Property(e => e.Country).HasMaxLength(50);
            entity.Property(e => e.CreditLimit).HasColumnType("money");
            entity.Property(e => e.DateAdded).HasColumnType("datetime");
            entity.Property(e => e.DeletedDate).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.Fax).HasMaxLength(50);
            entity.Property(e => e.LastPoDate).HasColumnType("datetime");
            entity.Property(e => e.MfgAppr)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MfgApprBy).HasMaxLength(20);
            entity.Property(e => e.MfgApprDate)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.MfgDNU)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.MfgDNUBy).HasMaxLength(20);
            entity.Property(e => e.MfgDNUDate)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.Phone).HasMaxLength(50);
            entity.Property(e => e.RMAReqd)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RepAppr)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RepApprBy).HasMaxLength(20);
            entity.Property(e => e.RepApprDate)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.RepDNU)
                .HasMaxLength(2)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.RepDNUBy).HasMaxLength(20);
            entity.Property(e => e.RepDNUDate)
                .HasMaxLength(10)
                .IsFixedLength();
            entity.Property(e => e.State).HasMaxLength(50);
            entity.Property(e => e.Terms)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Vendor).HasMaxLength(255);
            entity.Property(e => e.VendorAccountNumber)
                .HasMaxLength(75)
                .IsUnicode(false)
                .HasComment("This is the vendor's internal account number for us in their system (their key for us)");
            entity.Property(e => e.Website).HasMaxLength(60);
            entity.Property(e => e.Zip).HasMaxLength(50);
            entity.Property(e => e.accountingId)
                .HasMaxLength(90)
                .IsUnicode(false);
        });

        modelBuilder.Entity<tblManufacturers>(entity =>
        {
            entity.HasKey(e => e.ManfName).HasName("tblManufacturers_pk");

            entity.HasIndex(e => e.ManfName, "ui_ftTblManufactures").IsUnique();

            entity.Property(e => e.ManfName)
                .HasMaxLength(120)
                .IsUnicode(false);
            entity.Property(e => e.ID).ValueGeneratedOnAdd();
            entity.Property(e => e.Primary).HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}